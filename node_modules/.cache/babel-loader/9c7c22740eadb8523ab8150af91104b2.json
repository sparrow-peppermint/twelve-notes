{"ast":null,"code":"var _jsxFileName = \"/Users/sparrowpeppermint/devacademy/twelve-notes/src/Note.tsx\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nconst activeStyle = css`\n  background-color: #333;\n`;\nconst Black = styled.button`\n  width: 40px;\n  height: 130px;\n  background: black;\n  border: solid black 1px;\n  position: absolute;\n  margin: 1px;\n  margin-left: -20px;\n\n  &:active {\n    background-color: #333;\n  }\n`;\nconst White = styled.button`\n  width: 60px;\n  height: 200px;\n  background: white;\n  border: solid black 1px;\n  box-shadow: 2px 5px;\n  margin: 1px;\n  margin-left: '-20px';\n  box-sizing: border-box;\n\n  &:active {\n    background-color: #eee;\n  }\n`;\n\nconst Note = ({\n  color,\n  note,\n  key,\n  clickHandler,\n  active\n}) => {\n  return color === 'white' ? /*#__PURE__*/React.createElement(White, {\n    value: note,\n    onKeyDown: clickHandler,\n    active: active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Black, {\n    value: note,\n    onKeyDown: clickHandler,\n    active: active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Note;","map":{"version":3,"sources":["/Users/sparrowpeppermint/devacademy/twelve-notes/src/Note.tsx"],"names":["React","styled","css","activeStyle","Black","button","White","Note","color","note","key","clickHandler","active"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,MAAMC,WAAW,GAAGD,GAAI;;CAAxB;AAIA,MAAME,KAAK,GAAGH,MAAM,CAACI,MAAO;;;;;;;;;;;;CAA5B;AAcA,MAAMC,KAAK,GAAGL,MAAM,CAACI,MAAO;;;;;;;;;;;;;CAA5B;;AAuBA,MAAME,IAAqB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,GAAf;AAAoBC,EAAAA,YAApB;AAAkCC,EAAAA;AAAlC,CAAD,KAAgD;AAC5E,SAAOJ,KAAK,KAAK,OAAV,gBACL,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEC,IAAd;AAAoB,IAAA,SAAS,EAAEE,YAA/B;AAA6C,IAAA,MAAM,EAAEC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,gBAGL,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEH,IAAd;AAAoB,IAAA,SAAS,EAAEE,YAA/B;AAA6C,IAAA,MAAM,EAAEC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF;AAKD,CAND;;AAQA,eAAeL,IAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport styled, { css } from 'styled-components'\n\nconst activeStyle = css`\n  background-color: #333;\n`\n\nconst Black = styled.button`\n  width: 40px;\n  height: 130px;\n  background: black;\n  border: solid black 1px;\n  position: absolute;\n  margin: 1px;\n  margin-left: -20px;\n\n  &:active {\n    background-color: #333;\n  }\n`\n\nconst White = styled.button`\n  width: 60px;\n  height: 200px;\n  background: white;\n  border: solid black 1px;\n  box-shadow: 2px 5px;\n  margin: 1px;\n  margin-left: '-20px';\n  box-sizing: border-box;\n\n  &:active {\n    background-color: #eee;\n  }\n`\n\ntype Props = {\n  color: string\n  note: string\n  key: string\n  clickHandler: () => void\n  active?: boolean\n}\n\nconst Note: React.FC<Props> = ({ color, note, key, clickHandler, active }) => {\n  return color === 'white' ? (\n    <White value={note} onKeyDown={clickHandler} active={active} />\n  ) : (\n    <Black value={note} onKeyDown={clickHandler} active={active} />\n  )\n}\n\nexport default Note\n"]},"metadata":{},"sourceType":"module"}