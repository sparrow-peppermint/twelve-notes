{"ast":null,"code":"var _jsxFileName = \"/Users/sparrowpeppermint/devacademy/twelve-notes/src/Octave.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Note from './Note';\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n\nconst Octave = ({\n  notes,\n  clickHandler\n}) => {\n  const [activeNote, setActiveNote] = React.useState();\n  React.useEffect(() => {\n    const handleKeyPress = e => {\n      notes.forEach(note => {\n        if (e.key === note.key) {\n          clickHandler(note.note);\n          setActiveNote(note.note);\n        }\n      });\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [clickHandler, notes]);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, notes.map(element => /*#__PURE__*/React.createElement(Note, {\n    color: element.color,\n    note: element.note,\n    clickHandler: () => clickHandler(element.note),\n    active: element.note === activeNote,\n    key: element.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Octave;","map":{"version":3,"sources":["/Users/sparrowpeppermint/devacademy/twelve-notes/src/Octave.tsx"],"names":["React","styled","Note","Wrapper","div","Octave","notes","clickHandler","activeNote","setActiveNote","useState","useEffect","handleKeyPress","e","forEach","note","key","window","addEventListener","removeEventListener","map","element","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,OAAO,GAAGF,MAAM,CAACG,GAAI;;;;;CAA3B;;AAYA,MAAMC,MAAuB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA6B;AAC3D,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,KAAK,CAACU,QAAN,EAApC;AAEAV,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpB,UAAMC,cAAc,GAAIC,CAAD,IAAsB;AAC3CP,MAAAA,KAAK,CAACQ,OAAN,CAAeC,IAAD,IAAU;AACtB,YAAIF,CAAC,CAACG,GAAF,KAAUD,IAAI,CAACC,GAAnB,EAAwB;AACtBT,UAAAA,YAAY,CAACQ,IAAI,CAACA,IAAN,CAAZ;AACAN,UAAAA,aAAa,CAACM,IAAI,CAACA,IAAN,CAAb;AACD;AACF,OALD;AAMD,KAPD;;AAQAE,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCN,cAAnC;AACA,WAAO,MAAM;AACXK,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCP,cAAtC;AACD,KAFD;AAGD,GAbD,EAaG,CAACL,YAAD,EAAeD,KAAf,CAbH;AAeA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACc,GAAN,CAAWC,OAAD,iBACT,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEA,OAAO,CAACC,KADjB;AAEE,IAAA,IAAI,EAAED,OAAO,CAACN,IAFhB;AAGE,IAAA,YAAY,EAAE,MAAMR,YAAY,CAACc,OAAO,CAACN,IAAT,CAHlC;AAIE,IAAA,MAAM,EAAEM,OAAO,CAACN,IAAR,KAAiBP,UAJ3B;AAKE,IAAA,GAAG,EAAEa,OAAO,CAACL,GALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CADF;AAeD,CAjCD;;AAmCA,eAAeX,MAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { NoteType } from './helpers'\nimport Note from './Note'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`\n\ntype Props = {\n  notes: NoteType[]\n  clickHandler: (note: string) => void\n}\n\nconst Octave: React.FC<Props> = ({ notes, clickHandler }) => {\n  const [activeNote, setActiveNote] = React.useState<string>()\n\n  React.useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      notes.forEach((note) => {\n        if (e.key === note.key) {\n          clickHandler(note.note)\n          setActiveNote(note.note)\n        }\n      })\n    }\n    window.addEventListener('keydown', handleKeyPress)\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress)\n    }\n  }, [clickHandler, notes])\n\n  return (\n    <Wrapper>\n      <div>\n        {notes.map((element: NoteType) => (\n          <Note\n            color={element.color}\n            note={element.note}\n            clickHandler={() => clickHandler(element.note)}\n            active={element.note === activeNote}\n            key={element.key}\n          />\n        ))}\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default Octave\n"]},"metadata":{},"sourceType":"module"}